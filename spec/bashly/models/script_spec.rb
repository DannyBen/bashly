require 'spec_helper'

describe Models::Script do
  let(:command) { Models::Command.new config }
  let(:config) { load_fixture('models/commands')[fixture] }
  let(:fixture) { :basic_command }

  context "without function name" do
    subject { described_class.new command }

    describe '#code' do
      it "returns the complete script" do
        lines = subject.code.split "\n"
        expect(lines[0]).to eq '#!/usr/bin/env bash'
        expect(lines[1]).to start_with '# This script was generated by'
        expect(lines[10]).to eq 'root_command() {'
        expect(lines[-1]).to eq 'run "$@"'
      end
    end
  end

  context "with function name" do
    subject { described_class.new command, 'my_super_function' }

    describe '#code' do
      it "returns the complete script wrapped in a function" do
        lines = subject.code.split "\n"
        expect(lines[0]).to eq '#!/usr/bin/env bash'
        expect(lines[1]).to start_with '# This script was generated by'
        expect(lines[10]).to eq 'my_super_function() {'
        expect(lines[11]).to eq '  # :command.root_command'
        expect(lines[-1]).to eq '(return 0 2>/dev/null) || my_super_function "$@"'
      end
    end
  end

end
