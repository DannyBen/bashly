+ bashly generate
creating user files in src
created src/upload_command.sh
created src/download_command.sh
created ./ftp
run ./ftp --help to test your bash script
+ ./ftp
ftp - Sample application that uses the default command option

Usage:
  ftp COMMAND
  ftp [COMMAND] --help | -h
  ftp --version | -v

Commands:
  upload     Upload a file (default)
  download   Download a file

+ ./ftp -h
ftp - Sample application that uses the default command option

Usage:
  ftp COMMAND
  ftp [COMMAND] --help | -h
  ftp --version | -v

Commands:
  upload     Upload a file (default)
  download   Download a file

Options:
  --help, -h
    Show this help

  --version, -v
    Show version number

+ ./ftp download something
# This file is located at 'src/download_command.sh'.
# It contains the implementation for the 'ftp download' command.
# The code you write here will be wrapped by a function named 'ftp_download_command()'.
# Feel free to edit this file; your changes will persist when regenerating.
args:
- ${args[source]} = something
+ ./ftp upload
missing required argument: SOURCE
usage: ftp [upload] SOURCE
+ ./ftp upload -h
ftp upload - Upload a file

Alias: u

Usage:
  ftp [upload] SOURCE
  ftp upload --help | -h

Options:
  --help, -h
    Show this help

Arguments:
  SOURCE
    File to upload

+ ./ftp upload something
# This file is located at 'src/upload_command.sh'.
# It contains the implementation for the 'ftp upload' command.
# The code you write here will be wrapped by a function named 'ftp_upload_command()'.
# Feel free to edit this file; your changes will persist when regenerating.
args:
- ${args[source]} = something
+ ./ftp something
# This file is located at 'src/upload_command.sh'.
# It contains the implementation for the 'ftp upload' command.
# The code you write here will be wrapped by a function named 'ftp_upload_command()'.
# Feel free to edit this file; your changes will persist when regenerating.
args:
- ${args[source]} = something
