+ bashly generate
creating user files in src
created src/initialize.sh
created src/multiline_command.sh
created src/regular_command.sh
created ./multi
run ./multi --help to test your bash script
+ ./multi
multi - Multiline test

Usage:
  multi [command]
  multi [command] --help | -h
  multi --version | -v

Commands:
  multiline   Do some multiline work.
  regular     Standard help line

+ ./multi -h
multi

  Multiline test
  
  This is a multiline test example. Long lines are going to be properly wrapped
  at the 80 character mark.

Usage:
  multi [command]
  multi [command] --help | -h
  multi --version | -v

Commands:
  multiline   Do some multiline work.
  regular     Standard help line

Options:
  --help, -h
    Show this help

  --version, -v
    Show version number

Environment Variables:
  MULTI_VITAMIN
    Environment variables can also use multiple lines. This can be useful if we
    need to explain - in excruciating detail - what the environemnt variable is
    used for.

Examples:
  Examples can also use multiple lines. This can be useful if we need to explain
  the example, for instance like we are doing here:
  
    multi multiline --flag

+ ./multi multiline
# this file is located in 'src/multiline_command.sh'
# code for 'multi multiline' goes here
# you can edit it freely and regenerate (it will not be overwritten)
args: none
+ ./multi multiline -h
multi multiline

  Do some multiline work.
  
  This is a long process and takes time, therefore it takes a lot of lines to
  describe and this line is particularly long.
  
  But - not all hope is lost. Bashly should respect newlines and word-wrap long
  lines properly at the 80 character mark.

Usage:
  multi multiline [MY_ARG] [options]
  multi multiline --help | -h

Options:
  --help, -h
    Show this help

  --long
    Long flag with long text.
    
    Finally, this will be the last multiline string we type (hopefully), but
    once we are done with this, we will be done with all.

Arguments:
  MY_ARG
    Argument with multiline.
    
    Once again we gather here to prepare some long lines that will most likely
    seem silly to anyone who reads them.
    
    But, it is just needed for testing - otherwise, it will not only be silly,
    but it will also be buggy!

